# generated by datamodel-codegen:
#   filename:  component.json
#   timestamp: 2025-01-31T03:56:44+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, List, Optional

from pydantic import BaseModel, Extra


class ComponentKind(Enum):
    scanner = 'scanner'
    source = 'source'
    sink = 'sink'


class ComponentStatus(Enum):
    stable = 'stable'
    preview = 'preview'
    experimental = 'experimental'
    deprecated = 'deprecated'


class FieldKind(Enum):
    scalar = 'scalar'
    map = 'map'
    list = 'list'


class FieldType(Enum):
    bool = 'bool'
    int = 'int'
    object = 'object'
    scanner = 'scanner'
    string = 'string'
    expression = 'expression'
    condition = 'condition'


class Range(BaseModel):
    class Config:
        extra = Extra.forbid

    lt: Optional[float] = None
    lte: Optional[float] = None
    gt: Optional[float] = None
    gte: Optional[float] = None


class Constraint(BaseModel):
    class Config:
        extra = Extra.forbid

    regex: Optional[str] = None
    range: Optional[Range] = None
    enum: Optional[List[str]] = None
    preset: Optional[str] = None


class Field(BaseModel):
    class Config:
        extra = Extra.forbid

    path: str
    name: str
    label: str
    kind: Optional[FieldKind] = None
    type: FieldType
    description: Optional[str] = None
    secret: Optional[bool] = None
    default: Optional[Any] = None
    optional: Optional[bool] = None
    examples: Optional[List] = None
    fields: Optional[List[Field]] = None
    constraints: Optional[List[Constraint]] = None
    render_hint: Optional[str] = None


class SynadiaConnectComponent(BaseModel):
    class Config:
        extra = Extra.forbid

    model_version: str
    name: str
    label: str
    kind: ComponentKind
    status: ComponentStatus
    description: str
    fields: Optional[List[Field]] = None


Field.update_forward_refs()
